{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Reference Architecture - Serverless Blog Hosting Using Wordpress and S3. This template is provided as-is, without warranty or support. Using this template will create AWS resources and will cost you money.",
	"Parameters": {
		"vpcid": {
			"Type": "AWS::EC2::VPC::Id",
			"Default": "vpc-abc123456",
			"Description": "This is the VPC that this will be launched into - this cloudformation does not create or tear down a VPC"
		},
		"InstanceType": {
			"Description": "WebServer EC2 instance type",
			"Type": "String",
			"Default": "t2.small"
		},
		"EC2Subnet": {
			"Description": "The public subnet to launch the EC2 into",
			"Type": "AWS::EC2::Subnet::Id",
			"Default": "subnet-abc123456"
		},
		"RDSSubnet": {
			"Description": "RDS Subnet Group",
			"Type": "String",
			"Default": "serverless-blog-subnet-group"
		},
		"RDSSnapshot": {
			"Description": "Snapshot ARN to use to launch RDS - the original baseline should be used as a default, or no default at all.",
			"Type": "String",
			"Default": "arn:aws:rds:us-east-1:99999999999:snapshot:rds-snapshot-baseline"
		},
		"RDSInstanceType": {
			"Description": "The instance type for RDS",
			"Type": "String",
			"Default": "db.t2.large"
		},
		"RDSStorage": {
			"Description": "The allocated storage for the RDS instance",
			"Type": "String",
			"Default": "10"
		},
		"EC2KeyPair": {
			"Description": "The EC2 KeyPair to use to launch the instance",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"Default": "MyPrivateEC2Key"
		},
		"EC2Image": {
			"Type": "AWS::EC2::Image::Id",
			"Description": "The AMI to use for the EC2 instance - likely a baked AMI with the application preinstalled and configured. Launching this instance should require no human hands to use, it should launch ready to take traffic.",
			"Default": "ami-abcdef123456"
		},
		"EC2SecurityGroup": {
			"Description": "Security Group for the EC2 instance",
			"Type": "AWS::EC2::SecurityGroup::Id",
			"Default": "sg-abc123456"
		},
		"RDSSecurityGroup": {
			"Description": "Security Group for the RDS instance",
			"Type": "AWS::EC2::SecurityGroup::Id",
			"Default": "sg-abc123456"
		},
		"EC2InstanceProfile": {
			"Description": "The IAM Instance Profile, or role, for the EC2 instance",
			"Type": "String",
			"Default": "EC2Role-Sync_To_S3_Bucket"
		},
		"S3Bucket": {
			"Description": "The S3 bucket that will be used as the synchronization target",
			"Type": "String",
			"Default": "blog.example.R53Domain.com"
		},
		"Route53HostedZoneID": {
			"Description": "The ID of the DNS zone in Route53 - e.g. Z2P8Q2LCPB4HSZ",
			"Type": "String",
			"Default": "ABCDEFG12345" 
		}
	},
	"Resources": {
		"WordpressAuthorInstance": {
			"Type": "AWS::EC2::Instance",
			"DependsOn": "rdsDBInstance",
			"Properties": {
				"KeyName": {
					"Ref": "EC2KeyPair"
				},
				"ImageId": {
					"Ref": "EC2Image"
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"Monitoring": "false",
				"Tags": [{
					"Key": "Name",
					"Value": "WordpressAuthor"
				}],
				"IamInstanceProfile": {
					"Ref": "EC2InstanceProfile"
					},
				"NetworkInterfaces": [{
					"DeviceIndex": "0",
					"AssociatePublicIpAddress": "true",
					"GroupSet": [{
					"Ref": "EC2SecurityGroup"
				}],
					"SubnetId": {
						"Ref": "EC2Subnet"
					}
				}],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -e \n",
                                "yum -y update \n",
                                "mkdir -m /var/www/export \n",
                                "aws s3 --region ", {"Ref" : "AWS::Region"} ," cp s3://",{"Ref":"S3Bucket"}," /var/www/export \n",
                                "sleep 10 \n",
                                "cat <<EOF > /etc/cron.d/aws-s3-sync \n",
                                "* * * * * root aws s3 --region ", {"Ref" : "AWS::Region"} ," sync /var/www/export s3://", {"Ref": "S3Bucket"} ," \n",
                                "EOF \n",
                                "service crond restart \n"
                            ]
                        ]
                    }
                }
            }
        },
		"rdsDBInstance": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"AllocatedStorage": {
					"Ref": "RDSStorage"
				},
				"DBInstanceClass": {
					"Ref": "RDSInstanceType"
				},
				"AllowMajorVersionUpgrade": "true",
				"AutoMinorVersionUpgrade": "true",
				"BackupRetentionPeriod": "0",
				"DBInstanceIdentifier": "wordpress",
				"DBSnapshotIdentifier": {
					"Ref": "RDSSnapshot"
				},
				"DBSubnetGroupName": {
					"Ref": "RDSSubnet"
				},
				"Engine": "mariadb",
				"EngineVersion": "10.1",
				"MultiAZ": "false",
				"PreferredMaintenanceWindow": "Mon:11:00-Mon:12:00",
				"PubliclyAccessible": "false",
				"StorageEncrypted": "false",
				"StorageType": "gp2",
				"VPCSecurityGroups": [{
					"Ref": "RDSSecurityGroup"
				}]
			},
			"DeletionPolicy": "Snapshot"
		},
		"route53RSDB": {
			"Type": "AWS::Route53::RecordSet",
			"DependsOn": "rdsDBInstance",
			"Properties": {
				"Name": "database.example.rackspace.com",
				"Type": "CNAME",
				"Comment": "DNS Record for Database Connection",
				"HostedZoneId": {"Ref": "Route53HostedZoneID"},
				"ResourceRecords": [{
					"Fn::GetAtt": ["rdsDBInstance", "Endpoint.Address"]
				}],
				"TTL": "120"
			}
		},
		"route53RSEC2": {
			"Type": "AWS::Route53::RecordSet",
			"DependsOn": "WordpressAuthorInstance",
			"Properties": {
				"Name": "author.example.rackspace.com",
				"Type": "A",
				"Comment": "DNS Record for Database Connection",
				"HostedZoneId": {"Ref": "Route53HostedZoneID"},
				"ResourceRecords": [{
					"Fn::GetAtt": ["WordpressAuthorInstance", "PublicIp"]
				}],
				"TTL": "120"
			}
		}

	}
}
