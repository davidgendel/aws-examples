{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Create the baseline for the Reference Architecture - Serverless Blog Hosting Using Wordpress and S3. This template is provided as-is, without warranty or support. Using this template will create AWS resources and will cost you money.",
	"Parameters": {
		"VPCName": {
			"Type": "String",
			"Description": "The name of the VPC for easier identification",
			"Default": "Reference Architecture - Serverless Blog"
		},
		"VPCCIDR": {
			"Type": "String",
			"Description": "The IP CIDR range for the VPC",
			"Default": "10.254.0.0/16"
		},
		"PublicSubnet1CIDR": {
			"Type": "String",
			"Description": "The IP CIDR range for the subnet",
			"Default": "10.254.0.0/24"
		},
		"PublicSubnet2CIDR": {
			"Type": "String",
			"Description": "The IP CIDR range for the subnet",
			"Default": "10.254.1.0/24"
		},
		"PrivateSubnet1CIDR": {
			"Type": "String",
			"Description": "The IP CIDR range for the subnet",
			"Default": "10.254.20.0/24"
		},
		"PrivateSubnet2CIDR": {
			"Type": "String",
			"Description": "The IP CIDR range for the subnet",
			"Default": "10.254.21.0/24"
		},
		"BucketName": {
			"Type": "String",
			"Description": "The name of the bucket, including the periods, to serve your website or blog",
			"Default": "You Must Enter An Acceptable and Unique Bucket Name"
		}
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"Tags": [{
					"Key": "VPC",
					"Value": {
						"Ref": "VPCName"
					}
				}, {
					"Key": "Use",
					"Value": "Reference Architecture"
				}]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"DependsOn": "VPC",
			"Properties": {
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"DependsOn": ["VPC", "InternetGateway"],
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"NATEIP": {
			"Type": "AWS::EC2::EIP",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway"],
			"Properties": {
				"Domain": "vpc"
			}
		},
		"PublicSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway"],
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet1CIDR"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						"0", {
							"Fn::GetAZs": ""
						}
					]
				},
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},
		"PublicSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway"],
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet2CIDR"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						"1", {
							"Fn::GetAZs": ""
						}
					]
				},
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},
		"PrivateSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway"],
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PrivateSubnet1CIDR"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						"0", {
							"Fn::GetAZs": ""
						}
					]
				},
				"Tags": [{
					"Key": "Network",
					"Value": "Private"
				}]
			}
		},
		"PrivateSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway"],
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PrivateSubnet2CIDR"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						"1", {
							"Fn::GetAZs": ""
						}
					]
				},
				"Tags": [{
					"Key": "Network",
					"Value": "Private"
				}]
			}
		},
		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway"],
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},
		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway", "PublicRouteTable"],
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnet1RouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway", "PublicSubnet1", "PublicRouteTable"],
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet1"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"PublicSubnet2RouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway", "PublicSubnet2", "PublicRouteTable"],
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet2"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"PrivateRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway"],
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Network",
					"Value": "Private"
				}]
			}
		},
		"PrivateSubnet1RouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway", "PrivateSubnet1", "PrivateRouteTable"],
			"Properties": {
				"SubnetId": {
					"Ref": "PrivateSubnet1"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"PrivateSubnet2RouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": ["VPC", "InternetGateway", "AttachGateway", "PrivateSubnet2", "PrivateRouteTable"],
			"Properties": {
				"SubnetId": {
					"Ref": "PrivateSubnet2"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"NATGateway": {
			"Type": "AWS::EC2::NatGateway",
			"DependsOn": ["VPC", "PublicSubnet2", "NATEIP", "AttachGateway"],
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["NATEIP", "AllocationId"]
				},
				"SubnetId": {
					"Ref": "PublicSubnet2"
				}
			}
		},
		"PrivateRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": ["VPC", "PrivateRouteTable", "NATEIP", "AttachGateway", "NATGateway"],
			"Properties": {
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {
					"Ref": "NATGateway"
				}
			}
		},
		"EC2SecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "VPC",
			"Properties": {
				"GroupDescription": "Security Group for EC2 Instance",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": "0.0.0.0/0"
				}],
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"RDSSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "VPC",
			"Properties": {
				"GroupDescription": "Security Group for RDS Instance",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "3306",
					"ToPort": "3306",
					"CidrIp": {
						"Ref": "VPCCIDR"
					}
				}],
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"RDSSubnetGroup": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"DependsOn": ["VPC", "PrivateSubnet1", "PrivateSubnet2"],
			"Properties": {
				"DBSubnetGroupDescription": "RDS Subnet Group which will use the two private subnets",
				"SubnetIds": [{
					"Ref": "PrivateSubnet1"
				}, {
					"Ref": "PrivateSubnet2"
				}]
			}
		},
		"WebHostingBucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"AccessControl": "PublicRead",
				"BucketName": {
					"Ref": "BucketName"
				},
				"WebsiteConfiguration": {
					"IndexDocument": "index.html"
				}
			}
		},
		"S3Endpoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"DependsOn": ["VPC", "AttachGateway", "PublicRouteTable", "PrivateRouteTable"],
			"Properties": {
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": "*",
						"Action": ["s3:GetObject"],
						"Resource": ["arn:aws:s3:::*"]
					}]
				},
				"RouteTableIds": [{
					"Ref": "PublicRouteTable"
				}, {
					"Ref": "PrivateRouteTable"
				}],
				"ServiceName": {
					"Fn::Join": ["", ["com.amazonaws.", {
						"Ref": "AWS::Region"
					}, ".s3"]]
				},
				"VpcId": {
					"Ref": "VPC"
				}
			}
		}
	},
	"Outputs": {
		"PublicSubnet1ID": {
			"Description": "The subnet ID for public subnet 1",
			"Value": {
				"Ref": "PublicSubnet1"
			}
		},
		"PublicSubnet2ID": {
			"Description": "The subnet ID for public subnet 2",
			"Value": {
				"Ref": "PublicSubnet2"
			}
		},
		"PrivateSubnet1ID": {
			"Description": "The subnet ID for private subnet 1",
			"Value": {
				"Ref": "PrivateSubnet1"
			}
		},
		"PrivateSubnet2ID": {
			"Description": "The subnet ID for private subnet 2",
			"Value": {
				"Ref": "PrivateSubnet2"
			}
		},
		"EC2SecurityGroupID": {
			"Description": "The Security Group ID for the EC2 Instance - TCP/80 and TCP/22",
			"Value": {
				"Ref": "EC2SecurityGroup"
			}
		},
		"RDSSecurityGroupID": {
			"Description": "The Security Group ID for RDS - TCP/3306",
			"Value": {
				"Ref": "RDSSecurityGroup"
			}
		},
		"RDSSubnetGroupName": {
			"Description": "The name of the RDS Subnet Group",
			"Value": {
				"Ref": "RDSSubnetGroup"
			}
		},
		"S3WebsiteBucket": {
			"Description": "The S3 bucket for hosting your website or blog",
			"Value": {
				"Ref": "WebHostingBucket"
			}
		}
	}

}